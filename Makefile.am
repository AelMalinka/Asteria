# Copyright 2016 (c) Michael Thomas (malinka) <malinka@entropy-development.com>
# Distributed under the terms of the GNU Affero General Public License v3

ACLOCAL_AMFLAGS = -I m4
asteriaconfdir = $(sysconfdir)/asteria
AM_CPPFLAGS = -I$(srcdir)/src -DDATADIR='"$(pkgdatadir)"' -DSYSCONFDIR='"$(asteriaconfdir)"' @CPPFLAGS@

mainheadersdir = $(includedir)/Entropy/Asteria
mainheaders_HEADERS = \
	src/Actor.hh \
	src/Application.hh \
	src/Camera.hh \
	src/Character.hh \
	src/Exception.hh \
	src/Map.hh \
	src/Sprite.hh

characterheadersdir = $(includedir)/Entropy/Asteria/Character
characterheaders_HEADERS = \
	src/Character/Armor.hh \
	src/Character/Equipment.hh \
	src/Character/Item.hh \
	src/Character/Resources.hh \
	src/Character/Skills.hh \
	src/Character/Stats.hh \
	src/Character/Weapon.hh

mapheadersdir = $(includedir)/Entropy/Asteria/Map
mapheaders_HEADERS = \
	src/Map/Cave.hh \
	src/Map/Cellular.hh \
	src/Map/Floor.hh \
	src/Map/Object.hh \
	src/Map/Tile.hh

modesheadersdir = $(includedir)/Entropy/Asteria/Modes
modesheaders_HEADERS = \
	src/Modes/Death.hh \
	src/Modes/Fight.hh \
	src/Modes/Menu.hh \
	src/Modes/Options.hh \
	src/Modes/World.hh

uiheadersdir = $(includedir)/Entropy/Asteria/UI
uiheaders_HEADERS = \
	src/UI/Button.hh \
	src/UI/Menu.hh

lib_LTLIBRARIES = libasteria.la

libasteria_la_SOURCES = \
	src/Character/Armor.cc \
	src/Character/Equipment.cc \
	src/Character/Item.cc \
	src/Character/Weapon.cc \
	src/Map/Cave.cc \
	src/Map/Cellular.cc \
	src/Map/Floor.cc \
	src/Map/Object.cc \
	src/Map/Tile.cc \
	src/Modes/Death.cc \
	src/Modes/Fight.cc \
	src/Modes/Menu.cc \
	src/Modes/Options.cc \
	src/Modes/World.cc \
	src/UI/Button.cc \
	src/UI/Menu.cc \
	src/Actor.cc \
	src/Application.cc \
	src/Camera.cc \
	src/Character.cc \
	src/Logger.cc \
	src/Map.cc \
	src/Sprite.cc

bin_PROGRAMS = \
	asteria \
	generate-caves

pkgdata_DATA = \
	data/Armor.png \
	data/Character.png \
	data/Grass.png \
	data/Monster.png \
	data/Mountain.png \
	data/NotoSansUI-Regular.ttf \
	data/Sword.png

asteriaconf_DATA = \
	data/settings.json

asteria_SOURCES = src/Asteria.cc
asteria_LDADD = libasteria.la

generate_caves_SOURCES = src/GenerateCave.cc
generate_caves_LDADD = libasteria.la

check_PROGRAMS =

all-local:
	test -d data || $(LN_S) $(top_srcdir)/data $(builddir)/data

if GTEST
check_PROGRAMS += \
	character-basic \
	character-attack \
	floor-cave \
	map-object \
	map-tile \
	map-map

# 2016-08-22 AMR TODO: abstract some of this logic to be autogenerated
testLDADD = -lgtest_main -lgtest -lasteria $(AM_LDADD)
testLDFLAGS = -pthread $(AM_LDFLAGS)

character_basic_SOURCES = test/character/basic.cc
character_basic_LDADD = $(testLDADD)
character_basic_LDFLAGS = $(testLDFLAGS)

character_attack_SOURCES = test/character/attack.cc
character_attack_LDADD = $(testLDADD)
character_attack_LDFLAGS = $(testLDFLAGS)

floor_cave_SOURCES = test/floor/cave.cc
floor_cave_LDADD = $(testLDADD)
floor_cave_LDFLAGS = $(testLDFLAGS)

map_object_SOURCES = test/map/object.cc
map_object_LDADD = $(testLDADD)
map_object_LDFLAGS = $(testLDFLAGS)

map_tile_SOURCES = test/map/tile.cc
map_tile_LDADD = $(testLDADD)
map_tile_LDFLAGS = $(testLDFLAGS)

map_map_SOURCES = test/map/map.cc
map_map_LDADD = $(testLDADD)
map_map_LDFLAGS = $(testLDFLAGS)
endif

TESTSUITE = $(srcdir)/test/testsuite
TESTSUITE_FILES = \
	test/character.at \
	test/map.at \
	test/floor.at

EXTRA_DIST = \
	$(TESTSUITE_FILES) \
	$(srcdir)/test/testsuite.at \
	$(srcdir)/package.m4 \
	$(TESTSUITE) \
	$(srcdir)/test/atlocal.in

$(srcdir)/package.m4: $(top_srcdir)/configure.ac
	:; {\
		echo '# Signature of the current package. (auto-generated)' && \
		echo 'm4_define([AT_PACKAGE_NAME],' && \
		echo '  [$(PACKAGE_NAME)])' && \
		echo 'm4_define([AT_PACKAGE_TARNAME],' && \
		echo '  [$(PACKAGE_TARNAME)])' && \
		echo 'm4_define([AT_PACKAGE_VERSION],' && \
		echo '  [$(PACKAGE_VERSION)])' && \
		echo 'm4_define([AT_PACKAGE_STRING],' && \
		echo '  [$(PACKAGE_STRING)])' && \
		echo 'm4_define([AT_PACKAGE_BUGREPORT],' && \
		echo '  [$(PACKAGE_BUGREPORT)])'; \
		echo 'm4_define([AT_PACKAGE_URL],' && \
		echo '  [$(PACKAGE_URL)])'; \
	} >'$(srcdir)/package.m4'

#2013-10-11 AMR XXX: $(shell x) is a GNUMake extension
check-local: test/atconfig atlocal $(TESTSUITE)
	$(SHELL) '$(TESTSUITE)' AUTOTEST_PATH='$(shell pwd)' $(TESTSUITEFLAGS)

clean-local:
	test ! -f '$(TESTSUITE)' || \
		$(SHELL) '$(TESTSUITE)' --clean

AUTOM4TE = $(SHELL) $(srcdir)/build-aux/missing --run autom4te
AUTOTEST = $(AUTOM4TE) --language=autotest
$(TESTSUITE): $(srcdir)/test/testsuite.at $(TESTSUITE_FILES) $(srcdir)/package.m4
	$(AUTOTEST) -I '$(srcdir)/test' -I $(srcdir) -o $@.tmp $@.at
	mv $@.tmp $@
